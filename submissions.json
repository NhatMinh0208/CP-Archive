{
  "CF100121478": {
    "contest_id": 1404,
    "language": "GNU C++17 (64)",
    "path": "codeforces\\1404\\C.cpp",
    "problem_index": "C",
    "problem_name": "Fixed Point Removal",
    "problem_url": "https://codeforces.com/contest/1404/problem/C",
    "submission_id": "CF100121478",
    "submission_url": "https://codeforces.com/contest/1404/submission/100121478",
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "greedy",
      "two pointers",
      "*2300"
    ],
    "timestamp": "Dec/01/2020 21:24"
  },
  "CF100121676": {
    "contest_id": 1404,
    "language": "GNU C++17 (64)",
    "path": "codeforces\\1404\\C.cpp",
    "problem_index": "C",
    "problem_name": "Fixed Point Removal",
    "problem_url": "https://codeforces.com/contest/1404/problem/C",
    "submission_id": "CF100121676",
    "submission_url": "https://codeforces.com/contest/1404/submission/100121676",
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "greedy",
      "two pointers",
      "*2300"
    ],
    "timestamp": "Dec/01/2020 21:26"
  },
  "CF100129529": {
    "contest_id": 1334,
    "language": "GNU C++17 (64)",
    "path": "codeforces\\1334\\F.cpp",
    "problem_index": "F",
    "problem_name": "Strange Function",
    "problem_url": "https://codeforces.com/contest/1334/problem/F",
    "submission_id": "CF100129529",
    "submission_url": "https://codeforces.com/contest/1334/submission/100129529",
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy",
      "*2500"
    ],
    "timestamp": "Dec/01/2020 22:57"
  },
  "CF100150614": {
    "contest_id": 981,
    "language": "GNU C++17 (64)",
    "path": "codeforces\\981\\G.cpp",
    "problem_index": "G",
    "problem_name": "Magic multisets",
    "problem_url": "https://codeforces.com/contest/981/problem/G",
    "submission_id": "CF100150614",
    "submission_url": "https://codeforces.com/contest/981/submission/100150614",
    "tags": [
      "data structures",
      "*2500"
    ],
    "timestamp": "Dec/02/2020 08:14"
  },
  "CF100206658": {
    "contest_id": 1404,
    "language": "GNU C++17 (64)",
    "path": "codeforces\\1404\\E.cpp",
    "problem_index": "E",
    "problem_name": "Bricks",
    "problem_url": "https://codeforces.com/contest/1404/problem/E",
    "submission_id": "CF100206658",
    "submission_url": "https://codeforces.com/contest/1404/submission/100206658",
    "tags": [
      "flows",
      "graph matchings",
      "graphs",
      "*2800"
    ],
    "timestamp": "Dec/02/2020 22:51"
  },
  "CF100312319": {
    "contest_id": 1044,
    "language": "GNU C++17 (64)",
    "path": "codeforces\\1044\\F.cpp",
    "problem_index": "F",
    "problem_name": "DFS",
    "problem_url": "https://codeforces.com/contest/1044/problem/F",
    "submission_id": "CF100312319",
    "submission_url": "https://codeforces.com/contest/1044/submission/100312319",
    "tags": [
      "data structures",
      "*2700"
    ],
    "timestamp": "Dec/04/2020 09:35"
  },
  "CF100314384": {
    "contest_id": 1089,
    "language": "GNU C++17 (64)",
    "path": "codeforces\\1089\\K.cpp",
    "problem_index": "K",
    "problem_name": "King Kog's Reception",
    "problem_url": "https://codeforces.com/contest/1089/problem/K",
    "submission_id": "CF100314384",
    "submission_url": "https://codeforces.com/contest/1089/submission/100314384",
    "tags": [
      "data structures",
      "*2400"
    ],
    "timestamp": "Dec/04/2020 10:31"
  },
  "CF100328647": {
    "contest_id": 1326,
    "language": "GNU C++17 (64)",
    "path": "codeforces\\1326\\E.cpp",
    "problem_index": "E",
    "problem_name": "Bombs",
    "problem_url": "https://codeforces.com/contest/1326/problem/E",
    "submission_id": "CF100328647",
    "submission_url": "https://codeforces.com/contest/1326/submission/100328647",
    "tags": [
      "data structures",
      "two pointers",
      "*2400"
    ],
    "timestamp": "Dec/04/2020 14:34"
  },
  "CF100390719": {
    "contest_id": 1453,
    "language": "GNU C++17 (64)",
    "path": "codeforces\\1453\\D.cpp",
    "problem_index": "D",
    "problem_name": "Checkpoints",
    "problem_url": "https://codeforces.com/contest/1453/problem/D",
    "submission_id": "CF100390719",
    "submission_url": "https://codeforces.com/contest/1453/submission/100390719",
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math",
      "probabilities",
      "*1900"
    ],
    "timestamp": "Dec/04/2020 23:26"
  },
  "CF100410704": {
    "contest_id": 1453,
    "language": "GNU C++17 (64)",
    "path": "codeforces\\1453\\E.cpp",
    "problem_index": "E",
    "problem_name": "Dog Snacks",
    "problem_url": "https://codeforces.com/contest/1453/problem/E",
    "submission_id": "CF100410704",
    "submission_url": "https://codeforces.com/contest/1453/submission/100410704",
    "tags": [
      "binary search",
      "dfs and similar",
      "dp",
      "greedy",
      "trees",
      "*2300"
    ],
    "timestamp": "Dec/05/2020 09:10"
  },
  "CF100412141": {
    "contest_id": 1453,
    "language": "GNU C++17 (64)",
    "path": "codeforces\\1453\\F.cpp",
    "problem_index": "F",
    "problem_name": "Even Harder",
    "problem_url": "https://codeforces.com/contest/1453/problem/F",
    "submission_id": "CF100412141",
    "submission_url": "https://codeforces.com/contest/1453/submission/100412141",
    "tags": [
      "dp",
      "*2700"
    ],
    "timestamp": "Dec/05/2020 10:01"
  },
  "CF100594895": {
    "contest_id": 1450,
    "language": "GNU C++17 (64)",
    "path": "codeforces\\1450\\C1.cpp",
    "problem_index": "C1",
    "problem_name": "Errich-Tac-Toe (Easy Version)",
    "problem_url": "https://codeforces.com/contest/1450/problem/C1",
    "submission_id": "CF100594895",
    "submission_url": "https://codeforces.com/contest/1450/submission/100594895",
    "tags": [
      "constructive algorithms",
      "math",
      "*2100"
    ],
    "timestamp": "Dec/07/2020 08:58"
  },
  "CF100594898": {
    "contest_id": 1450,
    "language": "GNU C++17 (64)",
    "path": "codeforces\\1450\\C2.cpp",
    "problem_index": "C2",
    "problem_name": "Errich-Tac-Toe (Hard Version)",
    "problem_url": "https://codeforces.com/contest/1450/problem/C2",
    "submission_id": "CF100594898",
    "submission_url": "https://codeforces.com/contest/1450/submission/100594898",
    "tags": [
      "constructive algorithms",
      "math",
      "*2300"
    ],
    "timestamp": "Dec/07/2020 08:58"
  },
  "CF100631257": {
    "contest_id": 1450,
    "language": "GNU C++17 (64)",
    "path": "codeforces\\1450\\A.cpp",
    "problem_index": "A",
    "problem_name": "Avoid Trygub",
    "problem_url": "https://codeforces.com/contest/1450/problem/A",
    "submission_id": "CF100631257",
    "submission_url": "https://codeforces.com/contest/1450/submission/100631257",
    "tags": [
      "constructive algorithms",
      "sortings",
      "*800"
    ],
    "timestamp": "Dec/07/2020 20:32"
  },
  "CF100631624": {
    "contest_id": 1450,
    "language": "GNU C++17 (64)",
    "path": "codeforces\\1450\\B.cpp",
    "problem_index": "B",
    "problem_name": "Balls of Steel",
    "problem_url": "https://codeforces.com/contest/1450/problem/B",
    "submission_id": "CF100631624",
    "submission_url": "https://codeforces.com/contest/1450/submission/100631624",
    "tags": [
      "brute force",
      "geometry",
      "greedy",
      "*1000"
    ],
    "timestamp": "Dec/07/2020 20:36"
  },
  "CF100636509": {
    "contest_id": 1450,
    "language": "GNU C++17 (64)",
    "path": "codeforces\\1450\\F.cpp",
    "problem_index": "F",
    "problem_name": "The Struggling Contestant",
    "problem_url": "https://codeforces.com/contest/1450/problem/F",
    "submission_id": "CF100636509",
    "submission_url": "https://codeforces.com/contest/1450/submission/100636509",
    "tags": [
      "constructive algorithms",
      "greedy",
      "*2400"
    ],
    "timestamp": "Dec/07/2020 21:42"
  },
  "CF100769692": {
    "contest_id": 1408,
    "language": "GNU C++17",
    "path": "codeforces\\1408\\G.cpp",
    "problem_index": "G",
    "problem_name": "Clusterization Counting",
    "problem_url": "https://codeforces.com/contest/1408/problem/G",
    "submission_id": "CF100769692",
    "submission_url": "https://codeforces.com/contest/1408/submission/100769692",
    "tags": [
      "combinatorics",
      "dp",
      "dsu",
      "fft",
      "graphs",
      "trees",
      "*2700"
    ],
    "timestamp": "Dec/09/2020 20:58"
  },
  "CF100774386": {
    "contest_id": 1438,
    "language": "GNU C++17",
    "path": "codeforces\\1438\\E.cpp",
    "problem_index": "E",
    "problem_name": "Yurii Can Do Everything",
    "problem_url": "https://codeforces.com/contest/1438/problem/E",
    "submission_id": "CF100774386",
    "submission_url": "https://codeforces.com/contest/1438/submission/100774386",
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "divide and conquer",
      "two pointers",
      "*2500"
    ],
    "timestamp": "Dec/09/2020 21:59"
  },
  "CF100816067": {
    "contest_id": 916,
    "language": "GNU C++17",
    "path": "codeforces\\916\\E.cpp",
    "problem_index": "E",
    "problem_name": "Jamie and Tree",
    "problem_url": "https://codeforces.com/contest/916/problem/E",
    "submission_id": "CF100816067",
    "submission_url": "https://codeforces.com/contest/916/submission/100816067",
    "tags": [
      "data structures",
      "trees",
      "*2400"
    ],
    "timestamp": "Dec/10/2020 15:07"
  },
  "CF100817975": {
    "contest_id": 1239,
    "language": "GNU C++17",
    "path": "codeforces\\1239\\C.cpp",
    "problem_index": "C",
    "problem_name": "Queue in the Train",
    "problem_url": "https://codeforces.com/contest/1239/problem/C",
    "submission_id": "CF100817975",
    "submission_url": "https://codeforces.com/contest/1239/submission/100817975",
    "tags": [
      "data structures",
      "greedy",
      "implementation",
      "*2300"
    ],
    "timestamp": "Dec/10/2020 15:37"
  },
  "CF100820094": {
    "contest_id": 915,
    "language": "GNU C++17",
    "path": "codeforces\\915\\E.cpp",
    "problem_index": "E",
    "problem_name": "Physical Education Lessons",
    "problem_url": "https://codeforces.com/contest/915/problem/E",
    "submission_id": "CF100820094",
    "submission_url": "https://codeforces.com/contest/915/submission/100820094",
    "tags": [
      "data structures",
      "implementation",
      "sortings",
      "*2300"
    ],
    "timestamp": "Dec/10/2020 16:10"
  },
  "CF100907632": {
    "contest_id": 915,
    "language": "GNU C++17 (64)",
    "path": "codeforces\\915\\F.cpp",
    "problem_index": "F",
    "problem_name": "Imbalance Value of a Tree",
    "problem_url": "https://codeforces.com/contest/915/problem/F",
    "submission_id": "CF100907632",
    "submission_url": "https://codeforces.com/contest/915/submission/100907632",
    "tags": [
      "data structures",
      "dsu",
      "graphs",
      "trees",
      "*2400"
    ],
    "timestamp": "Dec/11/2020 20:51"
  },
  "CF100958227": {
    "contest_id": 901,
    "language": "GNU C++17 (64)",
    "path": "codeforces\\901\\C.cpp",
    "problem_index": "C",
    "problem_name": "Bipartite Segments",
    "problem_url": "https://codeforces.com/contest/901/problem/C",
    "submission_id": "CF100958227",
    "submission_url": "https://codeforces.com/contest/901/submission/100958227",
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs",
      "two pointers",
      "*2300"
    ],
    "timestamp": "Dec/11/2020 23:45"
  },
  "CF100982414": {
    "contest_id": 1209,
    "language": "GNU C++17 (64)",
    "path": "codeforces\\1209\\F.cpp",
    "problem_index": "F",
    "problem_name": "Koala and Notebook",
    "problem_url": "https://codeforces.com/contest/1209/problem/F",
    "submission_id": "CF100982414",
    "submission_url": "https://codeforces.com/contest/1209/submission/100982414",
    "tags": [
      "data structures",
      "dfs and similar",
      "graphs",
      "shortest paths",
      "strings",
      "trees",
      "*2600"
    ],
    "timestamp": "Dec/12/2020 09:53"
  },
  "CF100985728": {
    "contest_id": 1268,
    "language": "GNU C++17 (64)",
    "path": "codeforces\\1268\\C.cpp",
    "problem_index": "C",
    "problem_name": "K Integers",
    "problem_url": "https://codeforces.com/contest/1268/problem/C",
    "submission_id": "CF100985728",
    "submission_url": "https://codeforces.com/contest/1268/submission/100985728",
    "tags": [
      "binary search",
      "data structures",
      "*2300"
    ],
    "timestamp": "Dec/12/2020 11:32"
  },
  "CF101005306": {
    "contest_id": 895,
    "language": "GNU C++17 (64)",
    "path": "codeforces\\895\\E.cpp",
    "problem_index": "E",
    "problem_name": "Eyes Closed",
    "problem_url": "https://codeforces.com/contest/895/problem/E",
    "submission_id": "CF101005306",
    "submission_url": "https://codeforces.com/contest/895/submission/101005306",
    "tags": [
      "data structures",
      "probabilities",
      "*2300"
    ],
    "timestamp": "Dec/12/2020 16:32"
  },
  "CF101070868": {
    "contest_id": 1373,
    "language": "GNU C++17 (64)",
    "path": "codeforces\\1373\\G.cpp",
    "problem_index": "G",
    "problem_name": "Pawns",
    "problem_url": "https://codeforces.com/contest/1373/problem/G",
    "submission_id": "CF101070868",
    "submission_url": "https://codeforces.com/contest/1373/submission/101070868",
    "tags": [
      "data structures",
      "divide and conquer",
      "greedy",
      "*2600"
    ],
    "timestamp": "Dec/13/2020 11:59"
  },
  "CF101111314": {
    "contest_id": 1223,
    "language": "GNU C++17 (64)",
    "path": "codeforces\\1223\\F.cpp",
    "problem_index": "F",
    "problem_name": "Stack Exterminable Arrays",
    "problem_url": "https://codeforces.com/contest/1223/problem/F",
    "submission_id": "CF101111314",
    "submission_url": "https://codeforces.com/contest/1223/submission/101111314",
    "tags": [
      "data structures",
      "divide and conquer",
      "dp",
      "hashing",
      "*2600"
    ],
    "timestamp": "Dec/13/2020 21:44"
  },
  "CF101171973": {
    "contest_id": 1367,
    "language": "GNU C++17",
    "path": "codeforces\\1367\\F2.cpp",
    "problem_index": "F2",
    "problem_name": "Flying Sort (Hard Version)",
    "problem_url": "https://codeforces.com/contest/1367/problem/F2",
    "submission_id": "CF101171973",
    "submission_url": "https://codeforces.com/contest/1367/submission/101171973",
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy",
      "sortings",
      "two pointers",
      "*2400"
    ],
    "timestamp": "Dec/14/2020 20:11"
  },
  "CF101257646": {
    "contest_id": 1220,
    "language": "GNU C++17",
    "path": "codeforces\\1220\\F.cpp",
    "problem_index": "F",
    "problem_name": "Gardener Alex",
    "problem_url": "https://codeforces.com/contest/1220/problem/F",
    "submission_id": "CF101257646",
    "submission_url": "https://codeforces.com/contest/1220/submission/101257646",
    "tags": [
      "binary search",
      "data structures",
      "*2700"
    ],
    "timestamp": "Dec/15/2020 21:17"
  },
  "CF101286093": {
    "contest_id": 1379,
    "language": "GNU C++17",
    "path": "codeforces\\1379\\F1.cpp",
    "problem_index": "F1",
    "problem_name": "Chess Strikes Back (easy version)",
    "problem_url": "https://codeforces.com/contest/1379/problem/F1",
    "submission_id": "CF101286093",
    "submission_url": "https://codeforces.com/contest/1379/submission/101286093",
    "tags": [
      "binary search",
      "data structures",
      "*2700"
    ],
    "timestamp": "Dec/15/2020 22:03"
  },
  "CF101345127": {
    "contest_id": 868,
    "language": "GNU C++17",
    "path": "codeforces\\868\\F.cpp",
    "problem_index": "F",
    "problem_name": "Yet Another Minimization Problem",
    "problem_url": "https://codeforces.com/contest/868/problem/F",
    "submission_id": "CF101345127",
    "submission_url": "https://codeforces.com/contest/868/submission/101345127",
    "tags": [
      "divide and conquer",
      "dp",
      "*2500"
    ],
    "timestamp": "Dec/15/2020 23:38"
  },
  "CF101539967": {
    "contest_id": 1179,
    "language": "GNU C++17 (64)",
    "path": "codeforces\\1179\\D.cpp",
    "problem_index": "D",
    "problem_name": "Fedor Runs for President",
    "problem_url": "https://codeforces.com/contest/1179/problem/D",
    "submission_id": "CF101539967",
    "submission_url": "https://codeforces.com/contest/1179/submission/101539967",
    "tags": [
      "data structures",
      "dp",
      "trees",
      "*2700"
    ],
    "timestamp": "Dec/17/2020 22:11"
  },
  "CF101572201": {
    "contest_id": 1132,
    "language": "GNU C++17 (64)",
    "path": "codeforces\\1132\\G.cpp",
    "problem_index": "G",
    "problem_name": "Greedy Subsequences",
    "problem_url": "https://codeforces.com/contest/1132/problem/G",
    "submission_id": "CF101572201",
    "submission_url": "https://codeforces.com/contest/1132/submission/101572201",
    "tags": [
      "data structures",
      "dp",
      "trees",
      "*2400"
    ],
    "timestamp": "Dec/17/2020 23:20"
  },
  "CF101620214": {
    "contest_id": 1099,
    "language": "GNU C++17 (64)",
    "path": "codeforces\\1099\\F.cpp",
    "problem_index": "F",
    "problem_name": "Cookies",
    "problem_url": "https://codeforces.com/contest/1099/problem/F",
    "submission_id": "CF101620214",
    "submission_url": "https://codeforces.com/contest/1099/submission/101620214",
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "dp",
      "games",
      "trees",
      "*2400"
    ],
    "timestamp": "Dec/18/2020 15:17"
  },
  "CF101624616": {
    "contest_id": 1207,
    "language": "GNU C++17 (64)",
    "path": "codeforces\\1207\\F.cpp",
    "problem_index": "F",
    "problem_name": "Remainder Problem",
    "problem_url": "https://codeforces.com/contest/1207/problem/F",
    "submission_id": "CF101624616",
    "submission_url": "https://codeforces.com/contest/1207/submission/101624616",
    "tags": [
      "brute force",
      "data structures",
      "implementation",
      "*2100"
    ],
    "timestamp": "Dec/18/2020 16:22"
  },
  "CF101778338": {
    "contest_id": 1458,
    "language": "GNU C++17",
    "path": "codeforces\\1458\\C.cpp",
    "problem_index": "C",
    "problem_name": "Latin Square",
    "problem_url": "https://codeforces.com/contest/1458/problem/C",
    "submission_id": "CF101778338",
    "submission_url": "https://codeforces.com/contest/1458/submission/101778338",
    "tags": [
      "math",
      "matrices",
      "*2700"
    ],
    "timestamp": "Dec/19/2020 21:14"
  },
  "CF101784726": {
    "contest_id": 1290,
    "language": "GNU C++17",
    "path": "codeforces\\1290\\C.cpp",
    "problem_index": "C",
    "problem_name": "Prefix Enlightenment",
    "problem_url": "https://codeforces.com/contest/1290/problem/C",
    "submission_id": "CF101784726",
    "submission_url": "https://codeforces.com/contest/1290/submission/101784726",
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "*2400"
    ],
    "timestamp": "Dec/19/2020 22:56"
  },
  "CF101787472": {
    "contest_id": 1407,
    "language": "GNU C++17",
    "path": "codeforces\\1407\\E.cpp",
    "problem_index": "E",
    "problem_name": "Egor in the Republic of Dagestan",
    "problem_url": "https://codeforces.com/contest/1407/problem/E",
    "submission_id": "CF101787472",
    "submission_url": "https://codeforces.com/contest/1407/submission/101787472",
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "graphs",
      "greedy",
      "shortest paths",
      "*2500"
    ],
    "timestamp": "Dec/19/2020 23:30"
  },
  "CF101787726": {
    "contest_id": 1407,
    "language": "GNU C++17",
    "path": "codeforces\\1407\\E.cpp",
    "problem_index": "E",
    "problem_name": "Egor in the Republic of Dagestan",
    "problem_url": "https://codeforces.com/contest/1407/problem/E",
    "submission_id": "CF101787726",
    "submission_url": "https://codeforces.com/contest/1407/submission/101787726",
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "graphs",
      "greedy",
      "shortest paths",
      "*2500"
    ],
    "timestamp": "Dec/19/2020 23:33"
  },
  "CF101815700": {
    "contest_id": 1227,
    "language": "GNU C++17",
    "path": "codeforces\\1227\\F2.cpp",
    "problem_index": "F2",
    "problem_name": "Wrong Answer on test 233 (Hard Version)",
    "problem_url": "https://codeforces.com/contest/1227/problem/F2",
    "submission_id": "CF101815700",
    "submission_url": "https://codeforces.com/contest/1227/submission/101815700",
    "tags": [
      "combinatorics",
      "math",
      "*2400"
    ],
    "timestamp": "Dec/20/2020 11:03"
  },
  "CF101841602": {
    "contest_id": 1270,
    "language": "GNU C++17",
    "path": "codeforces\\1270\\G.cpp",
    "problem_index": "G",
    "problem_name": "Subset with Zero Sum",
    "problem_url": "https://codeforces.com/contest/1270/problem/G",
    "submission_id": "CF101841602",
    "submission_url": "https://codeforces.com/contest/1270/submission/101841602",
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "math",
      "*2700"
    ],
    "timestamp": "Dec/20/2020 18:01"
  },
  "CF101856040": {
    "contest_id": 1139,
    "language": "GNU C++17",
    "path": "codeforces\\1139\\E.cpp",
    "problem_index": "E",
    "problem_name": "Maximize Mex",
    "problem_url": "https://codeforces.com/contest/1139/problem/E",
    "submission_id": "CF101856040",
    "submission_url": "https://codeforces.com/contest/1139/submission/101856040",
    "tags": [
      "flows",
      "graph matchings",
      "graphs",
      "*2400"
    ],
    "timestamp": "Dec/20/2020 21:23"
  },
  "CF101858499": {
    "contest_id": 959,
    "language": "GNU C++17",
    "path": "codeforces\\959\\F.cpp",
    "problem_index": "F",
    "problem_name": "Mahmoud and Ehab and yet another xor task",
    "problem_url": "https://codeforces.com/contest/959/problem/F",
    "submission_id": "CF101858499",
    "submission_url": "https://codeforces.com/contest/959/submission/101858499",
    "tags": [
      "bitmasks",
      "dp",
      "math",
      "matrices",
      "*2400"
    ],
    "timestamp": "Dec/20/2020 21:53"
  },
  "CF101925498": {
    "contest_id": 1109,
    "language": "GNU C++17",
    "path": "codeforces\\1109\\D.cpp",
    "problem_index": "D",
    "problem_name": "Sasha and Interesting Fact from Graph Theory",
    "problem_url": "https://codeforces.com/contest/1109/problem/D",
    "submission_id": "CF101925498",
    "submission_url": "https://codeforces.com/contest/1109/submission/101925498",
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "math",
      "trees",
      "*2400"
    ],
    "timestamp": "Dec/21/2020 09:43"
  },
  "CF101926916": {
    "contest_id": 1088,
    "language": "GNU C++17",
    "path": "codeforces\\1088\\E.cpp",
    "problem_index": "E",
    "problem_name": "Ehab and a component choosing problem",
    "problem_url": "https://codeforces.com/contest/1088/problem/E",
    "submission_id": "CF101926916",
    "submission_url": "https://codeforces.com/contest/1088/submission/101926916",
    "tags": [
      "dp",
      "greedy",
      "math",
      "trees",
      "*2400"
    ],
    "timestamp": "Dec/21/2020 10:32"
  },
  "CF101940388": {
    "contest_id": 923,
    "language": "GNU C++17",
    "path": "codeforces\\923\\D.cpp",
    "problem_index": "D",
    "problem_name": "Picking Strings",
    "problem_url": "https://codeforces.com/contest/923/problem/D",
    "submission_id": "CF101940388",
    "submission_url": "https://codeforces.com/contest/923/submission/101940388",
    "tags": [
      "constructive algorithms",
      "implementation",
      "strings",
      "*2500"
    ],
    "timestamp": "Dec/21/2020 14:53"
  },
  "CF101943041": {
    "contest_id": 1096,
    "language": "GNU C++17 (64)",
    "path": "codeforces\\1096\\G.cpp",
    "problem_index": "G",
    "problem_name": "Lucky Tickets",
    "problem_url": "https://codeforces.com/contest/1096/problem/G",
    "submission_id": "CF101943041",
    "submission_url": "https://codeforces.com/contest/1096/submission/101943041",
    "tags": [
      "divide and conquer",
      "dp",
      "fft",
      "*2400"
    ],
    "timestamp": "Dec/21/2020 15:35"
  },
  "CF101949008": {
    "contest_id": 1091,
    "language": "GNU C++17 (64)",
    "path": "codeforces\\1091\\E.cpp",
    "problem_index": "E",
    "problem_name": "New Year and the Acquaintance Estimation",
    "problem_url": "https://codeforces.com/contest/1091/problem/E",
    "submission_id": "CF101949008",
    "submission_url": "https://codeforces.com/contest/1091/submission/101949008",
    "tags": [
      "binary search",
      "data structures",
      "graphs",
      "greedy",
      "implementation",
      "math",
      "sortings",
      "*2400"
    ],
    "timestamp": "Dec/21/2020 17:04"
  },
  "CF101963799": {
    "contest_id": 1097,
    "language": "GNU C++17 (64)",
    "path": "codeforces\\1097\\F.cpp",
    "problem_index": "F",
    "problem_name": "Alex and a TV Show",
    "problem_url": "https://codeforces.com/contest/1097/problem/F",
    "submission_id": "CF101963799",
    "submission_url": "https://codeforces.com/contest/1097/submission/101963799",
    "tags": [
      "bitmasks",
      "combinatorics",
      "number theory",
      "*2500"
    ],
    "timestamp": "Dec/21/2020 20:25"
  },
  "CF102001086": {
    "contest_id": 1304,
    "language": "GNU C++11",
    "path": "codeforces\\1304\\F2.cpp",
    "problem_index": "F2",
    "problem_name": "Animal Observation (hard version)",
    "problem_url": "https://codeforces.com/contest/1304/problem/F2",
    "submission_id": "CF102001086",
    "submission_url": "https://codeforces.com/contest/1304/submission/102001086",
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "*2400"
    ],
    "timestamp": "Dec/22/2020 10:20"
  },
  "CF102002295": {
    "contest_id": 1174,
    "language": "GNU C++11",
    "path": "codeforces\\1174\\F.cpp",
    "problem_index": "F",
    "problem_name": "Ehab and the Big Finale",
    "problem_url": "https://codeforces.com/contest/1174/problem/F",
    "submission_id": "CF102002295",
    "submission_url": "https://codeforces.com/contest/1174/submission/102002295",
    "tags": [
      "constructive algorithms",
      "divide and conquer",
      "graphs",
      "implementation",
      "interactive",
      "trees",
      "*2400"
    ],
    "timestamp": "Dec/22/2020 11:00"
  },
  "CF102023155": {
    "contest_id": 1174,
    "language": "GNU C++11",
    "path": "codeforces\\1174\\E.cpp",
    "problem_index": "E",
    "problem_name": "Ehab and the Expected GCD Problem",
    "problem_url": "https://codeforces.com/contest/1174/problem/E",
    "submission_id": "CF102023155",
    "submission_url": "https://codeforces.com/contest/1174/submission/102023155",
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "number theory",
      "*2500"
    ],
    "timestamp": "Dec/22/2020 15:09"
  },
  "CF102028569": {
    "contest_id": 1423,
    "language": "GNU C++11",
    "path": "codeforces\\1423\\F.cpp",
    "problem_index": "F",
    "problem_name": "Coins",
    "problem_url": "https://codeforces.com/contest/1423/problem/F",
    "submission_id": "CF102028569",
    "submission_url": "https://codeforces.com/contest/1423/submission/102028569",
    "tags": [
      "math",
      "*2700"
    ],
    "timestamp": "Dec/22/2020 16:37"
  },
  "CF102032823": {
    "contest_id": 601,
    "language": "GNU C++17",
    "path": "codeforces\\601\\D.cpp",
    "problem_index": "D",
    "problem_name": "Acyclic Organic Compounds",
    "problem_url": "https://codeforces.com/contest/601/problem/D",
    "submission_id": "CF102032823",
    "submission_url": "https://codeforces.com/contest/601/submission/102032823",
    "tags": [
      "data structures",
      "dfs and similar",
      "dsu",
      "hashing",
      "strings",
      "trees",
      "*2400"
    ],
    "timestamp": "Dec/22/2020 17:40"
  },
  "CF102050073": {
    "contest_id": 1463,
    "language": "GNU C++17",
    "path": "codeforces\\1463\\F.cpp",
    "problem_index": "F",
    "problem_name": "Max Correct Set",
    "problem_url": "https://codeforces.com/contest/1463/problem/F",
    "submission_id": "CF102050073",
    "submission_url": "https://codeforces.com/contest/1463/submission/102050073",
    "tags": [
      "bitmasks",
      "dp",
      "math",
      "*3100"
    ],
    "timestamp": "Dec/22/2020 21:34"
  },
  "CF102054829": {
    "contest_id": 1305,
    "language": "GNU C++17",
    "path": "codeforces\\1305\\F.cpp",
    "problem_index": "F",
    "problem_name": "Kuroni and the Punishment",
    "problem_url": "https://codeforces.com/contest/1305/problem/F",
    "submission_id": "CF102054829",
    "submission_url": "https://codeforces.com/contest/1305/submission/102054829",
    "tags": [
      "math",
      "number theory",
      "probabilities",
      "*2500"
    ],
    "timestamp": "Dec/22/2020 22:29"
  },
  "CF102058105": {
    "contest_id": 641,
    "language": "GNU C++17",
    "path": "codeforces\\641\\D.cpp",
    "problem_index": "D",
    "problem_name": "Little Artem and Random Variable",
    "problem_url": "https://codeforces.com/contest/641/problem/D",
    "submission_id": "CF102058105",
    "submission_url": "https://codeforces.com/contest/641/submission/102058105",
    "tags": [
      "dp",
      "implementation",
      "math",
      "probabilities",
      "*2400"
    ],
    "timestamp": "Dec/22/2020 23:06"
  },
  "CF102083314": {
    "contest_id": 911,
    "language": "GNU C++17",
    "path": "codeforces\\911\\G.cpp",
    "problem_index": "G",
    "problem_name": "Mass Change Queries",
    "problem_url": "https://codeforces.com/contest/911/problem/G",
    "submission_id": "CF102083314",
    "submission_url": "https://codeforces.com/contest/911/submission/102083314",
    "tags": [
      "data structures",
      "*2500"
    ],
    "timestamp": "Dec/23/2020 08:46"
  },
  "CF102083597": {
    "contest_id": 911,
    "language": "GNU C++17",
    "path": "codeforces\\911\\F.cpp",
    "problem_index": "F",
    "problem_name": "Tree Destruction",
    "problem_url": "https://codeforces.com/contest/911/problem/F",
    "submission_id": "CF102083597",
    "submission_url": "https://codeforces.com/contest/911/submission/102083597",
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "greedy",
      "trees",
      "*2400"
    ],
    "timestamp": "Dec/23/2020 08:59"
  },
  "CF96323722": {
    "contest_id": 1090,
    "language": "GNU C++17",
    "path": "codeforces\\1090\\C.cpp",
    "problem_index": "C",
    "problem_name": "New Year Presents",
    "problem_url": "https://codeforces.com/contest/1090/problem/C",
    "submission_id": "CF96323722",
    "submission_url": "https://codeforces.com/contest/1090/submission/96323722",
    "tags": [
      "constructive algorithms",
      "data structures",
      "*2400"
    ],
    "timestamp": "Oct/22/2020 10:03"
  },
  "CF96465386": {
    "contest_id": 1433,
    "language": "GNU C++17",
    "path": "codeforces\\1433\\E.cpp",
    "problem_index": "E",
    "problem_name": "Two Round Dances",
    "problem_url": "https://codeforces.com/contest/1433/problem/E",
    "submission_id": "CF96465386",
    "submission_url": "https://codeforces.com/contest/1433/submission/96465386",
    "tags": [
      "combinatorics",
      "math",
      "*1300"
    ],
    "timestamp": "Oct/23/2020 23:19"
  },
  "CF96703702": {
    "contest_id": 1413,
    "language": "GNU C++17",
    "path": "codeforces\\1413\\D.cpp",
    "problem_index": "D",
    "problem_name": "Shurikens",
    "problem_url": "https://codeforces.com/contest/1413/problem/D",
    "submission_id": "CF96703702",
    "submission_url": "https://codeforces.com/contest/1413/submission/96703702",
    "tags": [
      "data structures",
      "greedy",
      "implementation",
      "*1700"
    ],
    "timestamp": "Oct/25/2020 20:55"
  },
  "CF96751347": {
    "contest_id": 1413,
    "language": "GNU C++17",
    "path": "codeforces\\1413\\C.cpp",
    "problem_index": "C",
    "problem_name": "Perform Easily",
    "problem_url": "https://codeforces.com/contest/1413/problem/C",
    "submission_id": "CF96751347",
    "submission_url": "https://codeforces.com/contest/1413/submission/96751347",
    "tags": [
      "binary search",
      "brute force",
      "dp",
      "implementation",
      "sortings",
      "two pointers",
      "*1900"
    ],
    "timestamp": "Oct/26/2020 13:35"
  },
  "CF96954883": {
    "contest_id": 1437,
    "language": "GNU C++17",
    "path": "codeforces\\1437\\E.cpp",
    "problem_index": "E",
    "problem_name": "Make It Increasing",
    "problem_url": "https://codeforces.com/contest/1437/problem/E",
    "submission_id": "CF96954883",
    "submission_url": "https://codeforces.com/contest/1437/submission/96954883",
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "dp",
      "implementation",
      "*2200"
    ],
    "timestamp": "Oct/28/2020 11:10"
  },
  "CF97182458": {
    "contest_id": 1401,
    "language": "GNU C++17",
    "path": "codeforces\\1401\\E.cpp",
    "problem_index": "E",
    "problem_name": "Divide Square",
    "problem_url": "https://codeforces.com/contest/1401/problem/E",
    "submission_id": "CF97182458",
    "submission_url": "https://codeforces.com/contest/1401/submission/97182458",
    "tags": [
      "data structures",
      "geometry",
      "implementation",
      "sortings",
      "*2400"
    ],
    "timestamp": "Oct/30/2020 22:03"
  },
  "CF97237561": {
    "contest_id": 319,
    "language": "GNU C++17",
    "path": "codeforces\\319\\C.cpp",
    "problem_index": "C",
    "problem_name": "Kalila and Dimna in the Logging Industry",
    "problem_url": "https://codeforces.com/contest/319/problem/C",
    "submission_id": "CF97237561",
    "submission_url": "https://codeforces.com/contest/319/submission/97237561",
    "tags": [
      "dp",
      "geometry",
      "*2100"
    ],
    "timestamp": "Oct/31/2020 17:38"
  },
  "CF97237952": {
    "contest_id": 319,
    "language": "GNU C++17",
    "path": "codeforces\\319\\C.cpp",
    "problem_index": "C",
    "problem_name": "Kalila and Dimna in the Logging Industry",
    "problem_url": "https://codeforces.com/contest/319/problem/C",
    "submission_id": "CF97237952",
    "submission_url": "https://codeforces.com/contest/319/submission/97237952",
    "tags": [
      "dp",
      "geometry",
      "*2100"
    ],
    "timestamp": "Oct/31/2020 17:45"
  },
  "CF97251764": {
    "contest_id": 660,
    "language": "GNU C++17",
    "path": "codeforces\\660\\F.cpp",
    "problem_index": "F",
    "problem_name": "Bear and Bowling 4",
    "problem_url": "https://codeforces.com/contest/660/problem/F",
    "submission_id": "CF97251764",
    "submission_url": "https://codeforces.com/contest/660/submission/97251764",
    "tags": [
      "binary search",
      "data structures",
      "geometry",
      "ternary search",
      "*2500"
    ],
    "timestamp": "Oct/31/2020 21:30"
  },
  "CF97253348": {
    "contest_id": 631,
    "language": "GNU C++17",
    "path": "codeforces\\631\\E.cpp",
    "problem_index": "E",
    "problem_name": "Product Sum",
    "problem_url": "https://codeforces.com/contest/631/problem/E",
    "submission_id": "CF97253348",
    "submission_url": "https://codeforces.com/contest/631/submission/97253348",
    "tags": [
      "data structures",
      "dp",
      "geometry",
      "*2600"
    ],
    "timestamp": "Oct/31/2020 21:57"
  },
  "CF97258474": {
    "contest_id": 932,
    "language": "GNU C++17",
    "path": "codeforces\\932\\F.cpp",
    "problem_index": "F",
    "problem_name": "Escape Through Leaf",
    "problem_url": "https://codeforces.com/contest/932/problem/F",
    "submission_id": "CF97258474",
    "submission_url": "https://codeforces.com/contest/932/submission/97258474",
    "tags": [
      "data structures",
      "dp",
      "geometry",
      "*2700"
    ],
    "timestamp": "Oct/31/2020 23:34"
  },
  "CF97368706": {
    "contest_id": 1444,
    "language": "GNU C++17",
    "path": "codeforces\\1444\\B.cpp",
    "problem_index": "B",
    "problem_name": "Divide and Sum",
    "problem_url": "https://codeforces.com/contest/1444/problem/B",
    "submission_id": "CF97368706",
    "submission_url": "https://codeforces.com/contest/1444/submission/97368706",
    "tags": [
      "combinatorics",
      "math",
      "sortings",
      "*1900"
    ],
    "timestamp": "Nov/01/2020 22:40"
  },
  "CF97565989": {
    "contest_id": 432,
    "language": "GNU C++17",
    "path": "codeforces\\432\\D.cpp",
    "problem_index": "D",
    "problem_name": "Prefixes and Suffixes",
    "problem_url": "https://codeforces.com/contest/432/problem/D",
    "submission_id": "CF97565989",
    "submission_url": "https://codeforces.com/contest/432/submission/97565989",
    "tags": [
      "dp",
      "string suffix structures",
      "strings",
      "two pointers",
      "*2000"
    ],
    "timestamp": "Nov/03/2020 20:56"
  },
  "CF97686625": {
    "contest_id": 1045,
    "language": "GNU C++17",
    "path": "codeforces\\1045\\G.cpp",
    "problem_index": "G",
    "problem_name": "AI robots",
    "problem_url": "https://codeforces.com/contest/1045/problem/G",
    "submission_id": "CF97686625",
    "submission_url": "https://codeforces.com/contest/1045/submission/97686625",
    "tags": [
      "data structures",
      "*2200"
    ],
    "timestamp": "Nov/05/2020 15:42"
  },
  "CF97783350": {
    "contest_id": 1009,
    "language": "GNU C++17",
    "path": "codeforces\\1009\\F.cpp",
    "problem_index": "F",
    "problem_name": "Dominant Indices",
    "problem_url": "https://codeforces.com/contest/1009/problem/F",
    "submission_id": "CF97783350",
    "submission_url": "https://codeforces.com/contest/1009/submission/97783350",
    "tags": [
      "data structures",
      "dsu",
      "trees",
      "*2300"
    ],
    "timestamp": "Nov/06/2020 21:14"
  },
  "CF97786153": {
    "contest_id": 1195,
    "language": "GNU C++17",
    "path": "codeforces\\1195\\F.cpp",
    "problem_index": "F",
    "problem_name": "Geometers Anonymous Club",
    "problem_url": "https://codeforces.com/contest/1195/problem/F",
    "submission_id": "CF97786153",
    "submission_url": "https://codeforces.com/contest/1195/submission/97786153",
    "tags": [
      "data structures",
      "geometry",
      "math",
      "sortings",
      "*2500"
    ],
    "timestamp": "Nov/06/2020 21:56"
  },
  "CF97812696": {
    "contest_id": 1114,
    "language": "GNU C++17",
    "path": "codeforces\\1114\\F.cpp",
    "problem_index": "F",
    "problem_name": "Please, another Queries on Array?",
    "problem_url": "https://codeforces.com/contest/1114/problem/F",
    "submission_id": "CF97812696",
    "submission_url": "https://codeforces.com/contest/1114/submission/97812696",
    "tags": [
      "bitmasks",
      "data structures",
      "divide and conquer",
      "math",
      "number theory",
      "*2400"
    ],
    "timestamp": "Nov/07/2020 08:57"
  },
  "CF97815854": {
    "contest_id": 1354,
    "language": "GNU C++17",
    "path": "codeforces\\1354\\F.cpp",
    "problem_index": "F",
    "problem_name": "Summoning Minions",
    "problem_url": "https://codeforces.com/contest/1354/problem/F",
    "submission_id": "CF97815854",
    "submission_url": "https://codeforces.com/contest/1354/submission/97815854",
    "tags": [
      "constructive algorithms",
      "dp",
      "flows",
      "graph matchings",
      "greedy",
      "sortings",
      "*2500"
    ],
    "timestamp": "Nov/07/2020 10:54"
  },
  "CF97836348": {
    "contest_id": 1354,
    "language": "GNU C++17",
    "path": "codeforces\\1354\\G.cpp",
    "problem_index": "G",
    "problem_name": "Find a Gift",
    "problem_url": "https://codeforces.com/contest/1354/problem/G",
    "submission_id": "CF97836348",
    "submission_url": "https://codeforces.com/contest/1354/submission/97836348",
    "tags": [
      "binary search",
      "interactive",
      "probabilities",
      "*2600"
    ],
    "timestamp": "Nov/07/2020 17:25"
  },
  "CF98134556": {
    "contest_id": 1436,
    "language": "GNU C++11",
    "path": "codeforces\\1436\\E.cpp",
    "problem_index": "E",
    "problem_name": "Complicated Computations",
    "problem_url": "https://codeforces.com/contest/1436/problem/E",
    "submission_id": "CF98134556",
    "submission_url": "https://codeforces.com/contest/1436/submission/98134556",
    "tags": [
      "binary search",
      "data structures",
      "two pointers",
      "*2400"
    ],
    "timestamp": "Nov/11/2020 21:35"
  },
  "CF98139095": {
    "contest_id": 946,
    "language": "GNU C++11",
    "path": "codeforces\\946\\G.cpp",
    "problem_index": "G",
    "problem_name": "Almost Increasing Array",
    "problem_url": "https://codeforces.com/contest/946/problem/G",
    "submission_id": "CF98139095",
    "submission_url": "https://codeforces.com/contest/946/submission/98139095",
    "tags": [
      "data structures",
      "dp",
      "*2500"
    ],
    "timestamp": "Nov/11/2020 22:37"
  },
  "CF98185739": {
    "contest_id": 808,
    "language": "GNU C++17 (64)",
    "path": "codeforces\\808\\G.cpp",
    "problem_index": "G",
    "problem_name": "Anthem of Berland",
    "problem_url": "https://codeforces.com/contest/808/problem/G",
    "submission_id": "CF98185739",
    "submission_url": "https://codeforces.com/contest/808/submission/98185739",
    "tags": [
      "dp",
      "strings",
      "*2300"
    ],
    "timestamp": "Nov/12/2020 16:19"
  },
  "CF98277343": {
    "contest_id": 1418,
    "language": "GNU C++17 (64)",
    "path": "codeforces\\1418\\G.cpp",
    "problem_index": "G",
    "problem_name": "Three Occurrences",
    "problem_url": "https://codeforces.com/contest/1418/problem/G",
    "submission_id": "CF98277343",
    "submission_url": "https://codeforces.com/contest/1418/submission/98277343",
    "tags": [
      "data structures",
      "divide and conquer",
      "hashing",
      "two pointers",
      "*2500"
    ],
    "timestamp": "Nov/13/2020 20:42"
  },
  "CF98279508": {
    "contest_id": 1380,
    "language": "GNU C++17 (64)",
    "path": "codeforces\\1380\\G.cpp",
    "problem_index": "G",
    "problem_name": "Circular Dungeon",
    "problem_url": "https://codeforces.com/contest/1380/problem/G",
    "submission_id": "CF98279508",
    "submission_url": "https://codeforces.com/contest/1380/submission/98279508",
    "tags": [
      "greedy",
      "math",
      "probabilities",
      "*2600"
    ],
    "timestamp": "Nov/13/2020 21:13"
  },
  "CF98314135": {
    "contest_id": 1380,
    "language": "GNU C++17 (64)",
    "path": "codeforces\\1380\\F.cpp",
    "problem_index": "F",
    "problem_name": "Strange Addition",
    "problem_url": "https://codeforces.com/contest/1380/problem/F",
    "submission_id": "CF98314135",
    "submission_url": "https://codeforces.com/contest/1380/submission/98314135",
    "tags": [
      "data structures",
      "dp",
      "matrices",
      "*2600"
    ],
    "timestamp": "Nov/13/2020 22:46"
  },
  "CF98381264": {
    "contest_id": 1348,
    "language": "GNU C++17",
    "path": "codeforces\\1348\\F.cpp",
    "problem_index": "F",
    "problem_name": "Phoenix and Memory",
    "problem_url": "https://codeforces.com/contest/1348/problem/F",
    "submission_id": "CF98381264",
    "submission_url": "https://codeforces.com/contest/1348/submission/98381264",
    "tags": [
      "data structures",
      "dfs and similar",
      "graphs",
      "greedy",
      "*2600"
    ],
    "timestamp": "Nov/14/2020 20:23"
  },
  "CF98512495": {
    "contest_id": 1446,
    "language": "GNU C++17",
    "path": "codeforces\\1446\\B.cpp",
    "problem_index": "B",
    "problem_name": "Catching Cheaters",
    "problem_url": "https://codeforces.com/contest/1446/problem/B",
    "submission_id": "CF98512495",
    "submission_url": "https://codeforces.com/contest/1446/submission/98512495",
    "tags": [
      "dp",
      "strings",
      "*1800"
    ],
    "timestamp": "Nov/16/2020 08:23"
  },
  "CF98513797": {
    "contest_id": 1446,
    "language": "GNU C++17",
    "path": "codeforces\\1446\\C.cpp",
    "problem_index": "C",
    "problem_name": "Xor Tree",
    "problem_url": "https://codeforces.com/contest/1446/problem/C",
    "submission_id": "CF98513797",
    "submission_url": "https://codeforces.com/contest/1446/submission/98513797",
    "tags": [
      "binary search",
      "bitmasks",
      "data structures",
      "divide and conquer",
      "dp",
      "trees",
      "*2100"
    ],
    "timestamp": "Nov/16/2020 09:16"
  },
  "CF98525945": {
    "contest_id": 1446,
    "language": "GNU C++17",
    "path": "codeforces\\1446\\A.cpp",
    "problem_index": "A",
    "problem_name": "Knapsack",
    "problem_url": "https://codeforces.com/contest/1446/problem/A",
    "submission_id": "CF98525945",
    "submission_url": "https://codeforces.com/contest/1446/submission/98525945",
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings",
      "*1300"
    ],
    "timestamp": "Nov/16/2020 14:15"
  },
  "CF98769807": {
    "contest_id": 1439,
    "language": "GNU C++17",
    "path": "codeforces\\1439\\B.cpp",
    "problem_index": "B",
    "problem_name": "Graph Subset Problem",
    "problem_url": "https://codeforces.com/contest/1439/problem/B",
    "submission_id": "CF98769807",
    "submission_url": "https://codeforces.com/contest/1439/submission/98769807",
    "tags": [
      "constructive algorithms",
      "data structures",
      "graphs",
      "*2600"
    ],
    "timestamp": "Nov/18/2020 10:10"
  },
  "CF98826937": {
    "contest_id": 1425,
    "language": "GNU C++17",
    "path": "codeforces\\1425\\D.cpp",
    "problem_index": "D",
    "problem_name": "Danger of Mad Snakes",
    "problem_url": "https://codeforces.com/contest/1425/problem/D",
    "submission_id": "CF98826937",
    "submission_url": "https://codeforces.com/contest/1425/submission/98826937",
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "*2300"
    ],
    "timestamp": "Nov/18/2020 22:47"
  },
  "CF98829295": {
    "contest_id": 1406,
    "language": "GNU C++17",
    "path": "codeforces\\1406\\E.cpp",
    "problem_index": "E",
    "problem_name": "Deleting Numbers",
    "problem_url": "https://codeforces.com/contest/1406/problem/E",
    "submission_id": "CF98829295",
    "submission_url": "https://codeforces.com/contest/1406/submission/98829295",
    "tags": [
      "interactive",
      "math",
      "number theory",
      "*2600"
    ],
    "timestamp": "Nov/18/2020 23:16"
  },
  "CF99070349": {
    "contest_id": 1452,
    "language": "GNU C++17",
    "path": "codeforces\\1452\\E.cpp",
    "problem_index": "E",
    "problem_name": "Two Editorials",
    "problem_url": "https://codeforces.com/contest/1452/problem/E",
    "submission_id": "CF99070349",
    "submission_url": "https://codeforces.com/contest/1452/submission/99070349",
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "sortings",
      "two pointers",
      "*2500"
    ],
    "timestamp": "Nov/21/2020 10:14"
  },
  "CF99211244": {
    "contest_id": 1392,
    "language": "GNU C++17 (64)",
    "path": "codeforces\\1392\\F.cpp",
    "problem_index": "F",
    "problem_name": "Omkar and Landslide",
    "problem_url": "https://codeforces.com/contest/1392/problem/F",
    "submission_id": "CF99211244",
    "submission_url": "https://codeforces.com/contest/1392/submission/99211244",
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "greedy",
      "math",
      "*2400"
    ],
    "timestamp": "Nov/22/2020 10:19"
  },
  "CF99213263": {
    "contest_id": 1375,
    "language": "GNU C++17 (64)",
    "path": "codeforces\\1375\\E.cpp",
    "problem_index": "E",
    "problem_name": "Inversion SwapSort",
    "problem_url": "https://codeforces.com/contest/1375/problem/E",
    "submission_id": "CF99213263",
    "submission_url": "https://codeforces.com/contest/1375/submission/99213263",
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings",
      "*2500"
    ],
    "timestamp": "Nov/22/2020 11:06"
  },
  "CF99243031": {
    "contest_id": 1401,
    "language": "GNU C++17 (64)",
    "path": "codeforces\\1401\\F.cpp",
    "problem_index": "F",
    "problem_name": "Reverse and Swap",
    "problem_url": "https://codeforces.com/contest/1401/problem/F",
    "submission_id": "CF99243031",
    "submission_url": "https://codeforces.com/contest/1401/submission/99243031",
    "tags": [
      "binary search",
      "bitmasks",
      "data structures",
      "*2400"
    ],
    "timestamp": "Nov/22/2020 17:42"
  },
  "CF99245031": {
    "contest_id": 1398,
    "language": "GNU C++17 (64)",
    "path": "codeforces\\1398\\G.cpp",
    "problem_index": "G",
    "problem_name": "Running Competition",
    "problem_url": "https://codeforces.com/contest/1398/problem/G",
    "submission_id": "CF99245031",
    "submission_url": "https://codeforces.com/contest/1398/submission/99245031",
    "tags": [
      "bitmasks",
      "fft",
      "math",
      "number theory",
      "*2600"
    ],
    "timestamp": "Nov/22/2020 18:06"
  },
  "CF99262347": {
    "contest_id": 1451,
    "language": "GNU C++17 (64)",
    "path": "codeforces\\1451\\F.cpp",
    "problem_index": "F",
    "problem_name": "Nullify The Matrix",
    "problem_url": "https://codeforces.com/contest/1451/problem/F",
    "submission_id": "CF99262347",
    "submission_url": "https://codeforces.com/contest/1451/submission/99262347",
    "tags": [
      "constructive algorithms",
      "games",
      "*2700"
    ],
    "timestamp": "Nov/22/2020 22:02"
  },
  "CF99264937": {
    "contest_id": 1451,
    "language": "GNU C++17 (64)",
    "path": "codeforces\\1451\\E1.cpp",
    "problem_index": "E1",
    "problem_name": "Bitwise Queries (Easy Version)",
    "problem_url": "https://codeforces.com/contest/1451/problem/E1",
    "submission_id": "CF99264937",
    "submission_url": "https://codeforces.com/contest/1451/submission/99264937",
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "interactive",
      "math",
      "*2000"
    ],
    "timestamp": "Nov/22/2020 22:40"
  },
  "CF99264940": {
    "contest_id": 1451,
    "language": "GNU C++17 (64)",
    "path": "codeforces\\1451\\E2.cpp",
    "problem_index": "E2",
    "problem_name": "Bitwise Queries (Hard Version)",
    "problem_url": "https://codeforces.com/contest/1451/problem/E2",
    "submission_id": "CF99264940",
    "submission_url": "https://codeforces.com/contest/1451/submission/99264940",
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "interactive",
      "math",
      "*2300"
    ],
    "timestamp": "Nov/22/2020 22:40"
  },
  "CF99266274": {
    "contest_id": 1451,
    "language": "GNU C++17 (64)",
    "path": "codeforces\\1451\\D.cpp",
    "problem_index": "D",
    "problem_name": "Circle Game",
    "problem_url": "https://codeforces.com/contest/1451/problem/D",
    "submission_id": "CF99266274",
    "submission_url": "https://codeforces.com/contest/1451/submission/99266274",
    "tags": [
      "games",
      "geometry",
      "math",
      "*1700"
    ],
    "timestamp": "Nov/22/2020 23:01"
  },
  "CF99542234": {
    "contest_id": 867,
    "language": "GNU C++17 (64)",
    "path": "codeforces\\867\\E.cpp",
    "problem_index": "E",
    "problem_name": "Buy Low Sell High",
    "problem_url": "https://codeforces.com/contest/867/problem/E",
    "submission_id": "CF99542234",
    "submission_url": "https://codeforces.com/contest/867/submission/99542234",
    "tags": [
      "data structures",
      "greedy",
      "*2400"
    ],
    "timestamp": "Nov/25/2020 16:15"
  },
  "CF99923950": {
    "contest_id": 1037,
    "language": "GNU C++17 (64)",
    "path": "codeforces\\1037\\F.cpp",
    "problem_index": "F",
    "problem_name": "Maximum Reduction",
    "problem_url": "https://codeforces.com/contest/1037/problem/F",
    "submission_id": "CF99923950",
    "submission_url": "https://codeforces.com/contest/1037/submission/99923950",
    "tags": [
      "combinatorics",
      "data structures",
      "math",
      "*2500"
    ],
    "timestamp": "Nov/29/2020 23:06"
  }
}